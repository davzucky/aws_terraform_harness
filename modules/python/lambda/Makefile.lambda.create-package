
include $(BUILD_HARNESS_PATH)/modules/python/lambda/Makefile.lambda

.SECONDEXPANSION:
$(LAMBDA_PACKAGES_ZIPS_PATH): $(TERRAFORM_LAMBDA_PACKAGES_PATH)/%.$(VERSION).zip: $(LAMBDA_PYTHON_ROOT_PATH)/%/$(REQUIREMENTS_FREEZE) $$(call RELEVANT,$(LAMBDA_PYTHON_ROOT_PATH)/%)
	@echo -e "\e[32m==> Create lambda package $@ \e[0m"

	@echo e "\e[32m====> Delete files $(TERRAFORM_LAMBDA_PACKAGES_PATH)/$**.zip \e[0m"
	@rm $(TERRAFORM_LAMBDA_PACKAGES_PATH)/$**.zip -f

	@echo -e "\e[32m====> add site-package \e[0m"
	@mkdir -p $(@D) && \
	 export root_path=$$(pwd) && \
	 cd $$(source $(patsubst $(LAMBDA_PYTHON_ROOT_PATH)/%/$(REQUIREMENTS_FREEZE),$(VIRTUAL_ENV_ROOT_PATH)/%/$(ACTIVATE_PATH), $<) && python -m site | grep "$$(pwd).*site-packages" | sed "s/^.*'\(.*\)'.*$$/\1/") && \
	 zip -r9 $${root_path}/$@ .

	@echo -e "\e[32m====> add lambda module files \e[0m"
	@export root_path=$$(pwd) && \
	 cd $(LAMBDA_PYTHON_ROOT_PATH) && \
	 zip -g $${root_path}/$@  $(subst $(LAMBDA_PYTHON_ROOT_PATH)/,,$(filter-out $<,$^))


$(TERRAFORM_VERSION_FILE): $(LAMBDA_PACKAGES_ZIPS_PATH)
	@echo -e "\e[32m==> Create terraform variable version file $@ \e[0m"
	@printf '%b\n' "variable \"module_version\" { \n  type = \"string\" \n  description = \"version of the module\" \n  default = \"$(VERSION)\" \n }" > $@


python/lambda/create-package: $(TERRAFORM_VERSION_FILE) ## Create lambda's packages
	@echo -e "\e[32m==> Create python lambda packages for version $(VERSION) \e[0m"